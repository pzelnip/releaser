<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.pzelnip</groupId>
	<artifactId>releaser</artifactId>
	<version>0.0.9-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Releaser</name>
	<description>
		An example for getting your GitHub project to Maven Central. Demonstrates required POM information and release plugin configuration. 
		Many thanks to: http://datumedge.blogspot.co.uk/2012/05/publishing-from-github-to-maven-central.html
	</description>
	<url>https://github.com/pzelnip/releaser</url>

	<!-- Required: source control information: -->
	<scm>
		<developerConnection>scm:git:git@github.com:pzelnip/releaser.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

	<distributionManagement>
		<!-- You'll probably want to test this out with a local copy of Nexus OSS. -->
		<!-- Remove these entries and uncomment the Sonatype Nexus repositories 
			below when you actually want to release. -->
		<snapshotRepository>
			<id>localhost-nexus-snapshots</id>
			<name>Local Nexus snapshot repository</name>
			<url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>localhost-nexus-staging</id>
			<name>Local Nexus release repository</name>
			<url>http://localhost:8081/nexus/content/repositories/releases/</url>
		</repository>
	</distributionManagement>

	<properties>
		<!-- Optional, but sensible -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>

		<!-- Include the README, NOTICE and LICENSE files: -->
		<resources>
			<resource>
				<directory>${project.basedir}</directory>
				<includes>
					<include>README*</include>
					<include>NOTICE*</include>
					<include>LICENSE*</include>
				</includes>
			</resource>
		</resources>

		<plugins>

			<!-- Optional: JVM 1.6 compliance and UTF-8 encoding: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- Optional: ensure the manifest contains artifact version information: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Required: source JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Required: javadoc JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadoc</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Release configuration: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.4.1</version>
			</plugin>

		</plugins>
	</build>

</project>
